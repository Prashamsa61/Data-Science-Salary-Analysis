summary(data)
# Data types and missing values
str(data)
# --- Non-Trivial Visualizations ---
# Question 1: Do Average Salaries for Top Data Roles Rise with Expertise?
# (Bar chart with faceting, error bars, and job title order)
top_titles <- data %>%
group_by(JobTitle) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
head(15) %>%
pull(JobTitle)
filtered_data <- data %>%
filter(JobTitle %in% top_titles)
p1 <- ggplot(filtered_data, aes(x = reorder(JobTitle, SalaryInUSD, FUN = median, order = FALSE), y = SalaryInUSD, fill = ExpertiseLevel)) +
stat_summary(fun = "mean", geom = "bar", position = "dodge") +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = "dodge", width = 0.2) +
labs(x = "Job Title", y = "Average Salary (USD)") +
facet_wrap(~ ExpertiseLevel, scales = "free_y") +
ggtitle("Average Salary by Job Title for Top 15 Job Titles (Facets by Expertise Level)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_y_continuous(labels = comma)
# Question 2:  How Does Salary Vary by Experience Level in Different Employment Types?
# (Interactive Scatter Plot with Faceting by Employment Type)
p2 <- ggplotly(
ggplot(data, aes(x = ExperienceLevel, y = SalaryInUSD, color = ExperienceLevel)) +
geom_point(alpha = 0.7) +
labs(x = "Experience Level", y = "Salary (USD)", title = "Salary vs. Experience by Employment Type") +
facet_wrap(~ EmploymentType, scales = "free") +
theme_minimal()
)
# Question 3: Where are Large Companies Concentrated?
# (Interactive Map)
# Prepare data for mapping
data_for_map <- data %>%
filter(CompanySize == "Large") %>% # Filter for large companies only
group_by(CompanyLocation) %>%
summarize(count = n())
# Join with country map data
sPDF <- joinCountryData2Map(data_for_map, joinCode = "NAME", nameJoinColumn = "CompanyLocation")
# Extract data for plotting
map_data <- data.frame(
country = sPDF$NAME,
count = sPDF$count,
long = coordinates(sPDF)[, 1],
lat = coordinates(sPDF)[, 2]
)
# Filter out countries with a count of zero or NA
map_data <- map_data %>%
filter(count > 0)
# Create the interactive map using plotly
p3 <- plot_ly(data = map_data, type = 'choropleth', locations = ~country, locationmode = 'country names', z = ~count, text = ~paste(country, '<br>Count:', count), colorscale = 'Viridis', colorbar = list(title = 'Number of Large Companies')) %>%
layout(title = 'Distribution of Large Companies', geo = list(showframe = FALSE, showcoastlines = TRUE, projection = list(type = 'natural earth')))
# Question 4: Salary Trends Over Time by Job Role
# (Line chart with trend lines)
# Calculate average salary for each year and job role
data_summary <- data %>%
group_by(Year, JobTitle) %>%
summarise(AverageSalary = mean(SalaryInUSD, na.rm = TRUE)) %>%
ungroup()
# Identify top 5 and bottom 5 job titles by average salary
job_title_salary <- data %>%
group_by(JobTitle) %>%
summarise(AverageSalary = mean(SalaryInUSD, na.rm = TRUE)) %>%
arrange(desc(AverageSalary))
top_5_jobs <- head(job_title_salary$JobTitle, 5)
bottom_5_jobs <- tail(job_title_salary$JobTitle, 5)
selected_jobs <- c(top_5_jobs, bottom_5_jobs)
# Filter data to include selected job roles
data_summary_filtered <- data_summary %>%
filter(JobTitle %in% selected_jobs)
# Function to add trend lines
add_trend_line <- function(data, job_title) {
lm_model <- lm(AverageSalary ~ Year, data = data %>% filter(JobTitle == job_title))
trend_data <- data.frame(
Year = seq(min(data$Year), max(data$Year)),
AverageSalary = predict(lm_model, newdata = data.frame(Year = seq(min(data$Year), max(data$Year)))),
JobTitle = job_title
)
return(trend_data)
}
# Generate trend lines for selected job roles
trend_lines <- bind_rows(lapply(selected_jobs, add_trend_line, data = data_summary_filtered))
# Create the visualization (line chart with trend lines)
p4 <- plot_ly(
data_summary_filtered,
x = ~ Year,
y = ~ AverageSalary,
color = ~ JobTitle,
type = "scatter",
mode = "lines+markers",
text = ~ paste("Job Title:", JobTitle),
hoverinfo = "text"
) %>%
add_lines(
data = trend_lines,
x = ~ Year,
y = ~ AverageSalary,
color = ~ JobTitle,
line = list(dash = "dash"),
inherit = FALSE
) %>%
layout(
xaxis = list(title = "Year"),
yaxis = list(title = "Average Salary in USD"),
title = "Salary Trends Over Time by Job Role",
hovermode = "x unified"
) %>%
highlight("plotly_hover", selected = attrs_selected(mode = "lines+markers"))
# Add job title labels at the end of lines
data_summary_end <- data_summary_filtered %>%
group_by(JobTitle) %>%
filter(Year == max(Year))
p4 <- p4 %>%
add_annotations(
x = data_summary_end$Year,
y = data_summary_end$AverageSalary,
text = data_summary_end$JobTitle,
xanchor = 'left',
yanchor = 'middle',
showarrow = FALSE,
font = list(size = 10)
)
# Question 5: Does Residence Impact Salary, Accounting for Job Title and Experience?
# (Scatter plot with faceting)
# Group by residence, job title, and experience level
residence_salary_data <- data %>%
group_by(EmployeeResidence, JobTitle, ExperienceLevel) %>%
summarize(AverageSalary = mean(SalaryInUSD, na.rm = TRUE))
# Create the visualization (scatter plot with faceting)
p5 <- ggplot(residence_salary_data, aes(x = ExperienceLevel, y = AverageSalary, color = ExperienceLevel)) +
geom_point() +
labs(x = "Experience Level", y = "Average Salary (USD)", title = "Average Salary by Residence, Job Title, and Experience Level") +
facet_grid(EmployeeResidence ~ JobTitle) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Question 6: Do Large Companies Pay More, Considering Experience and Job Title?
# (Grouped Bar Chart)
# Group by company size and experience level
company_size_salary <- data %>%
group_by(CompanySize, ExperienceLevel) %>%
summarize(AverageSalary = mean(SalaryInUSD, na.rm = TRUE)) %>%
ungroup()
# Create the visualization (grouped bar chart)
p6 <- ggplot(company_size_salary, aes(x = ExperienceLevel, y = AverageSalary, fill = ExperienceLevel)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~ CompanySize, scales = "free") +
labs(
x = "Experience Level",
y = "Average Salary in USD",
title = "Average Salary by Company Size and Experience Level"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Question 7: How Has Company Size Distribution Changed Over Time?
# (Pie Chart and Bar Chart)
# Calculate proportions of company sizes for each year
data_proportions <- data %>%
group_by(Year, CompanySize) %>%
summarise(Count = n(), AverageSalaryUSD = mean(SalaryInUSD)) %>%
mutate(Proportion = Count / sum(Count)) %>%
ungroup()
# Create a pie chart
p7_pie <- ggplot(data_proportions, aes(x = "", y = Proportion, fill = CompanySize)) +
geom_bar(width = 1, stat = "identity", color = "white", size = 0.2) +
coord_polar(theta = "y") +
facet_wrap( ~ Year, ncol = 3) +
labs(title = "Company Size Distribution by Year", x = NULL, y = NULL) +
theme_void() +
theme(
plot.title = element_text(hjust = 0.5, size = 16),
legend.position = "bottom",
legend.title = element_text(size = 14),
legend.text = element_text(size = 12),
strip.text = element_text(size = 12)
) +
scale_fill_brewer(palette = "Set3")
# Create a bar chart for average salary by company size and year
p7_bar <- ggplot(data_proportions, aes(x = factor(Year), y = AverageSalaryUSD, fill = CompanySize)) +
geom_col(position = "dodge") +
labs(x = "Year", y = "Average Salary (USD)", title = "Average Salary by Company Size and Year") +
scale_y_continuous(labels = comma) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_brewer(palette = "Set3")
# Combine the charts using grid.arrange
library(gridExtra)
grid.arrange(p7_pie, p7_bar, ncol = 1, heights = c(1, 1.5))
# Question 8: Does Experience Level Impact Salary Trends Over Time?
# (Line chart with facetting)
# Calculate average salary for each year and experience level
data_summary <- data %>%
group_by(Year, ExperienceLevel) %>%
summarise(AverageSalary = mean(SalaryInUSD, na.rm = TRUE)) %>%
ungroup()
# Create the visualization (line chart with facetting)
p8 <- ggplot(data_summary, aes(x = Year, y = AverageSalary, color = ExperienceLevel)) +
geom_line() +
labs(x = "Year", y = "Average Salary (USD)", title = "Salary Trends Over Time by Experience Level") +
facet_wrap(~ExperienceLevel, scales = "free_y") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Display the plots
print(p1)
print(p2)
print(p3)
print(p4)
print(p5)
p2 <- ggplotly(
ggplot(data, aes(x = ExperienceLevel, y = SalaryInUSD, color = ExperienceLevel)) +
geom_point(alpha = 0.7) +
labs(x = "Experience Level", y = "Salary (USD)", title = "Salary vs. Experience by Employment Type") +
facet_wrap(~ EmploymentType, scales = "free") +
theme_minimal()
)
p2
# (Bar chart with faceting, error bars, and job title order)
top_titles <- data %>%
group_by(JobTitle) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
head(15) %>%
pull(JobTitle)
filtered_data <- data %>%
filter(JobTitle %in% top_titles)
p1 <- ggplot(filtered_data, aes(x = reorder(JobTitle, SalaryInUSD, FUN = median, order = FALSE), y = SalaryInUSD, fill = ExpertiseLevel)) +
stat_summary(fun = "mean", geom = "bar", position = "dodge") +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = "dodge", width = 0.2) +
labs(x = "Job Title", y = "Average Salary (USD)") +
facet_wrap(~ ExpertiseLevel, scales = "free_y") +
ggtitle("Average Salary by Job Title for Top 15 Job Titles (Facets by Expertise Level)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_y_continuous(labels = comma)
p1
# Question 3: Where are Large Companies Concentrated?
# (Interactive Map)
# Prepare data for mapping
data_for_map <- data %>%
filter(CompanySize == "Large") %>% # Filter for large companies only
group_by(CompanyLocation) %>%
summarize(count = n())
# Join with country map data
sPDF <- joinCountryData2Map(data_for_map, joinCode = "NAME", nameJoinColumn = "CompanyLocation")
# Extract data for plotting
map_data <- data.frame(
country = sPDF$NAME,
count = sPDF$count,
long = coordinates(sPDF)[, 1],
lat = coordinates(sPDF)[, 2]
)
# Filter out countries with a count of zero or NA
map_data <- map_data %>%
filter(count > 0)
# Create the interactive map using plotly
p3 <- plot_ly(data = map_data, type = 'choropleth', locations = ~country, locationmode = 'country names', z = ~count, text = ~paste(country, '<br>Count:', count), colorscale = 'Viridis', colorbar = list(title = 'Number of Large Companies')) %>%
layout(title = 'Distribution of Large Companies', geo = list(showframe = FALSE, showcoastlines = TRUE, projection = list(type = 'natural earth')))
p3
# Question 4: Salary Trends Over Time by Job Role
# (Line chart with trend lines)
# Calculate average salary for each year and job role
data_summary <- data %>%
group_by(Year, JobTitle) %>%
summarise(AverageSalary = mean(SalaryInUSD, na.rm = TRUE)) %>%
ungroup()
# Identify top 5 and bottom 5 job titles by average salary
job_title_salary <- data %>%
group_by(JobTitle) %>%
summarise(AverageSalary = mean(SalaryInUSD, na.rm = TRUE)) %>%
arrange(desc(AverageSalary))
top_5_jobs <- head(job_title_salary$JobTitle, 5)
bottom_5_jobs <- tail(job_title_salary$JobTitle, 5)
selected_jobs <- c(top_5_jobs, bottom_5_jobs)
# Filter data to include selected job roles
data_summary_filtered <- data_summary %>%
filter(JobTitle %in% selected_jobs)
# Function to add trend lines
add_trend_line <- function(data, job_title) {
lm_model <- lm(AverageSalary ~ Year, data = data %>% filter(JobTitle == job_title))
trend_data <- data.frame(
Year = seq(min(data$Year), max(data$Year)),
AverageSalary = predict(lm_model, newdata = data.frame(Year = seq(min(data$Year), max(data$Year)))),
JobTitle = job_title
)
return(trend_data)
}
# Generate trend lines for selected job roles
trend_lines <- bind_rows(lapply(selected_jobs, add_trend_line, data = data_summary_filtered))
# Create the visualization (line chart with trend lines)
p4 <- plot_ly(
data_summary_filtered,
x = ~ Year,
y = ~ AverageSalary,
color = ~ JobTitle,
type = "scatter",
mode = "lines+markers",
text = ~ paste("Job Title:", JobTitle),
hoverinfo = "text"
) %>%
add_lines(
data = trend_lines,
x = ~ Year,
y = ~ AverageSalary,
color = ~ JobTitle,
line = list(dash = "dash"),
inherit = FALSE
) %>%
layout(
xaxis = list(title = "Year"),
yaxis = list(title = "Average Salary in USD"),
title = "Salary Trends Over Time by Job Role",
hovermode = "x unified"
) %>%
highlight("plotly_hover", selected = attrs_selected(mode = "lines+markers"))
# Add job title labels at the end of lines
data_summary_end <- data_summary_filtered %>%
group_by(JobTitle) %>%
filter(Year == max(Year))
p4 <- p4 %>%
add_annotations(
x = data_summary_end$Year,
y = data_summary_end$AverageSalary,
text = data_summary_end$JobTitle,
xanchor = 'left',
yanchor = 'middle',
showarrow = FALSE,
font = list(size = 10)
)
p4
# Question 5: Does Residence Impact Salary, Accounting for Job Title and Experience?
# (Scatter plot with faceting)
# Group by residence, job title, and experience level
residence_salary_data <- data %>%
group_by(EmployeeResidence, JobTitle, ExperienceLevel) %>%
summarize(AverageSalary = mean(SalaryInUSD, na.rm = TRUE))
# Create the visualization (scatter plot with faceting)
p5 <- ggplot(residence_salary_data, aes(x = ExperienceLevel, y = AverageSalary, color = ExperienceLevel)) +
geom_point() +
labs(x = "Experience Level", y = "Average Salary (USD)", title = "Average Salary by Residence, Job Title, and Experience Level") +
facet_grid(EmployeeResidence ~ JobTitle) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Question 6: Do Large Companies Pay More, Considering Experience and Job Title?
# (Grouped Bar Chart)
# Group by company size and experience level
company_size_salary <- data %>%
group_by(CompanySize, ExperienceLevel) %>%
summarize(AverageSalary = mean(SalaryInUSD, na.rm = TRUE)) %>%
ungroup()
p5
The provided code is largely correct but contains a few issues that need to be corrected. Here is the full corrected version of the code:
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(plotly)
library(scales)
library(rworldmap)
library(maps)
library(gridExtra)
# Import the data set
data <- read.csv("dataset.csv")
# --- Data Preprocessing ---
# Rename columns for readability
data <- data %>%
rename(
JobTitle = Job.Title,
EmploymentType = Employment.Type,
ExperienceLevel = Experience.Level,
ExpertiseLevel = Expertise.Level,
SalaryCurrency = Salary.Currency,
CompanyLocation = Company.Location,
SalaryInUSD = Salary.in.USD,
EmployeeResidence = Employee.Residence,
CompanySize = Company.Size
)
# --- Exploratory Data Analysis (EDA) ---
# Summary statistics
summary(data)
# Data types and missing values
str(data)
# --- Non-Trivial Visualizations ---
# Visualization 1: Do Average Salaries for Top Data Roles Rise with Expertise?
# (Bar chart with faceting, error bars, and job title order)
top_titles <- data %>%
group_by(JobTitle) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
head(15) %>%
pull(JobTitle)
filtered_data <- data %>%
filter(JobTitle %in% top_titles)
p1 <- ggplot(filtered_data, aes(x = reorder(JobTitle, SalaryInUSD, FUN = median, order = FALSE), y = SalaryInUSD, fill = ExpertiseLevel)) +
stat_summary(fun = "mean", geom = "bar", position = "dodge") +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = "dodge", width = 0.2) +
labs(x = "Job Title", y = "Average Salary (USD)") +
facet_wrap(~ ExpertiseLevel, scales = "free_y") +
ggtitle("Average Salary by Job Title for Top 15 Job Titles (Facets by Expertise Level)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_y_continuous(labels = comma)
print(p1)
# Visualization 2: How Does Salary Vary by Experience Level in Different Employment Types?
# (Interactive Scatter Plot with Faceting by Employment Type)
p2 <- ggplotly(
ggplot(data, aes(x = ExperienceLevel, y = SalaryInUSD, color = ExperienceLevel)) +
geom_point(alpha = 0.7) +
labs(x = "Experience Level", y = "Salary (USD)", title = "Salary vs. Experience by Employment Type") +
facet_wrap(~ EmploymentType, scales = "free") +
theme_minimal()
)
print(p2)
# Visualization 3: Where are Large Companies Concentrated?
# (Interactive Map)
# Prepare data for mapping
data_for_map <- data %>%
filter(CompanySize == "Large") %>% # Filter for large companies only
group_by(CompanyLocation) %>%
summarize(count = n())
# Join with country map data
sPDF <- joinCountryData2Map(data_for_map, joinCode = "NAME", nameJoinColumn = "CompanyLocation")
# Extract data for plotting
map_data <- data.frame(
country = sPDF$NAME,
count = sPDF$count,
long = coordinates(sPDF)[, 1],
lat = coordinates(sPDF)[, 2]
)
# Filter out countries with a count of zero or NA
map_data <- map_data %>%
filter(count > 0)
# Create the interactive map using plotly
p3 <- plot_ly(data = map_data, type = 'choropleth', locations = ~country, locationmode = 'country names', z = ~count, text = ~paste(country, '<br>Count:', count), colorscale = 'Viridis', colorbar = list(title = 'Number of Large Companies')) %>%
layout(title = 'Distribution of Large Companies', geo = list(showframe = FALSE, showcoastlines = TRUE, projection = list(type = 'natural earth')))
print(p3)
# Visualization 4: Salary Trends Over Time by Job Role
# (Line chart with trend lines)
# Calculate average salary for each year and job role
data_summary <- data %>%
group_by(Year, JobTitle) %>%
summarise(AverageSalary = mean(SalaryInUSD, na.rm = TRUE)) %>%
ungroup()
# Identify top 5 and bottom 5 job titles by average salary
job_title_salary <- data %>%
group_by(JobTitle) %>%
summarise(AverageSalary = mean(SalaryInUSD, na.rm = TRUE)) %>%
arrange(desc(AverageSalary))
top_5_jobs <- head(job_title_salary$JobTitle, 5)
bottom_5_jobs <- tail(job_title_salary$JobTitle, 5)
selected_jobs <- c(top_5_jobs, bottom_5_jobs)
# Filter data to include selected job roles
data_summary_filtered <- data_summary %>%
filter(JobTitle %in% selected_jobs)
# Function to add trend lines
add_trend_line <- function(data, job_title) {
lm_model <- lm(AverageSalary ~ Year, data = data %>% filter(JobTitle == job_title))
trend_data <- data.frame(
Year = seq(min(data$Year), max(data$Year)),
AverageSalary = predict(lm_model, newdata = data.frame(Year = seq(min(data$Year), max(data$Year)))),
JobTitle = job_title
)
return(trend_data)
}
# Generate trend lines for selected job roles
trend_lines <- bind_rows(lapply(selected_jobs, add_trend_line, data = data_summary_filtered))
# Create the visualization (line chart with trend lines)
p4 <- plot_ly(
data_summary_filtered,
x = ~ Year,
y = ~ AverageSalary,
color = ~ JobTitle,
type = "scatter",
mode = "lines+markers",
text = ~ paste("Job Title:", JobTitle),
hoverinfo = "text"
) %>%
add_lines(
data = trend_lines,
x = ~ Year,
y = ~ AverageSalary,
color = ~ JobTitle,
line = list(dash = "dash"),
inherit = FALSE
) %>%
layout(
xaxis = list(title = "Year"),
yaxis = list(title = "Average Salary in USD"),
title = "Salary Trends Over Time by Job Role",
hovermode = "x unified"
) %>%
highlight("plotly_hover", selected = attrs_selected(mode = "lines+markers"))
# Add job title labels at the end of lines
data_summary_end <- data_summary_filtered %>%
group_by(JobTitle) %>%
filter(Year == max(Year))
p4 <- p4 %>%
add_annotations(
x = data_summary_end$Year,
y = data_summary_end$AverageSalary,
text = data_summary_end$JobTitle,
xanchor = 'left',
yanchor = 'middle',
showarrow = FALSE,
font = list(size = 10)
)
print(p4)
# Visualization 5: Does Residence Impact Salary, Accounting for Job Title and Experience?
# (Scatter plot with faceting)
# Group by residence, job title, and experience level
residence_salary_data <- data %>%
group_by(EmployeeResidence, JobTitle, ExperienceLevel) %>%
summarize(AverageSalary = mean(SalaryInUSD, na.rm = TRUE))
# Create the visualization (scatter plot with faceting)
p5 <- ggplot(residence_salary_data, aes(x = ExperienceLevel, y = AverageSalary, color = ExperienceLevel)) +
geom_point() +
labs(x = "Experience Level", y = "Average Salary (USD)", title = "Average Salary by Residence, Job Title, and Experience Level") +
facet_grid(EmployeeResidence ~ JobTitle) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
print(p5)
